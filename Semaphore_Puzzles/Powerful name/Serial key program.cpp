#include <iostream>
#include <math.h>
#include <string>
#include <vector>
#include <Windows.h>

using namespace std; std::vector<long long int> gf(long long int num){ std::vector<long long int> f; for (long long int c = num; c > 1; c--){ if (num%c == 0)f.push_back(c); }return f; }bool cp(long long int number){ if (number == 2)return false; if (number % 2 == 0)return false; for (long long int c = number - 1; c > 1; c--){ if (number%c == 0)return false; }return true; }bool cpp(long long int num1, long long int num2){ std::vector<long long int> fn1 = gf(num1); std::vector<long long int> fn2 = gf(num2); for (long long int i = 0; i < fn1.size(); i++){ for (long long int c = 0; c < fn2.size(); c++){ if (fn1.at(i) == fn2.at(c))return false; } }return true; }long long int et(long long int n){ long long int t = 0; if (cp(n))return n - 1; for (long long int c = n; c > 0; c--){ if (cpp(n, c))t += 1; }return t; }long long int GenerateSerialKey(std::string n){ long long int s = 1; for (int c = strlen(n.c_str()) - 2; c > 0; c--){ s *= (int)n[c]; if (et((int)n[c]) < strlen(n.c_str())){ s = (int)pow(s, cpp(s, (int)n[c])); } }return s; }long long int GetUserInput(std::string n){ long long int input = 0; for (int c = 0; c < strlen(n.c_str()); c++){ input += pow((double)n[c], (c + 1)); }double db = strlen(n.c_str()); input = (int)(input / (pow(db, db))); return input; }int main(){ SetConsoleTitle(L"Charles' Keygen me"); std::cout << "Enter your name:" << std::endl; std::string name; std::getline(std::cin, name); long long int sk = GenerateSerialKey(name); long long int input = GetUserInput(name); std::cout << "Enter your serial key:" << std::endl; std::cin >> sk; if (sk == input){ std::cout << "That is the correct serial key! Well done! :>" << std::endl; } else{ std::cout << "That is the wrong serial key. :<" << std::endl; }system("pause"); }